// <auto-generated />
using System;
using ConsoleApp1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ConsoleApp1.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("RUB")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.Property<decimal>("TJK")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.Property<decimal>("USD")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Acconts");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08da6eff-cc2b-42b5-857b-1b0a2942c71d"),
                            Name = "Эсхата"
                        });
                });

            modelBuilder.Entity("ConsoleApp1.Models.Credit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Rate")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ca7d89c-94fd-45fd-bd0c-8dfa60686279"),
                            Code = 840,
                            Name = "USD",
                            Rate = 10.27m
                        },
                        new
                        {
                            Id = new Guid("19f0ed43-48f5-4b5e-a90d-1fd8715cabd0"),
                            Code = 643,
                            Name = "RUB",
                            Rate = 0.16745m
                        });
                });

            modelBuilder.Entity("ConsoleApp1.Models.Deposit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Transit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amout")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("converted_amount")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.Property<decimal>("cur_rate")
                        .HasPrecision(25, 2)
                        .HasColumnType("decimal(25,2)");

                    b.Property<string>("from_currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("to_currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransitAccounts");
                });

            modelBuilder.Entity("ConsoleApp1.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<Guid>("BankId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DatetimeAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Account", b =>
                {
                    b.HasOne("ConsoleApp1.Models.User", "User")
                        .WithOne("BankAccount")
                        .HasForeignKey("ConsoleApp1.Models.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Credit", b =>
                {
                    b.HasOne("ConsoleApp1.Models.User", "User")
                        .WithMany("Credits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Deposit", b =>
                {
                    b.HasOne("ConsoleApp1.Models.User", "User")
                        .WithMany("Deposits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Transit", b =>
                {
                    b.HasOne("ConsoleApp1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConsoleApp1.Models.User", b =>
                {
                    b.HasOne("ConsoleApp1.Models.Bank", "Bank")
                        .WithMany("Users")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("ConsoleApp1.Models.Bank", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ConsoleApp1.Models.User", b =>
                {
                    b.Navigation("BankAccount")
                        .IsRequired();

                    b.Navigation("Credits");

                    b.Navigation("Deposits");
                });
#pragma warning restore 612, 618
        }
    }
}
